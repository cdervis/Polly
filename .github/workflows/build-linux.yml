name: Build Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-22.04, ubuntu-latest ]
        config: [ Debug, Release ]
        ccompiler: [ gcc, clang ]
        cppcompiler: [ g++, clang++ ]
        exclude:
          - ccompiler: gcc
            cppcompiler: clang++
          - ccompiler: clang
            cppcompiler: g++
        include:
          - ccompiler: gcc
            cppcompiler: g++
            linker: ld
          - ccompiler: clang
            cppcompiler: clang++
            linker: lld

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "17.0"
        if: matrix.ccompiler == 'clang'

      - uses: awalsh128/cache-apt-pkgs-action@latest
        name: Install APT packages
        with:
          packages: >
            build-essential git make
            pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev
            libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev
            libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxtst-dev
            libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev
            libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev
          version: 1.0

      - name: Cache CMake dependencies
        uses: actions/cache@v4.2.4
        env:
          cache-name: cache-cmake-dependency-sources
        with:
          path: ${{github.workspace}}/build/_deps/*-src
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'CMake/**', 'Src/*.cmake') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Cache CMake dependencies build objects
        uses: actions/cache@v4.2.4
        env:
          cache-name: cache-cmake-dependency-builds
        with:
          path: |
            ${{github.workspace}}/build/_deps/*-build
            ${{github.workspace}}/build/_deps/*-subbuild
          key: ${{env.cache-name}}-${{matrix.os}}-${{ hashFiles('**/CMakeLists.txt', 'CMake/**', 'Src/*.cmake') }}
          restore-keys: |
            ${{env.cache-name}}-${{matrix.os}}-

      - name: Configure CMake
        run: >
          cmake -B ${{github.workspace}}/build -G Ninja
          -DCMAKE_BUILD_TYPE=${{matrix.config}}
          -DCMAKE_C_COMPILER=${{matrix.ccompiler}}
          -DCMAKE_CXX_COMPILER=${{matrix.cppcompiler}}
          -DCMAKE_EXE_LINKER_FLAGS_INIT="-fuse-ld=${{matrix.linker}}"
          -DCMAKE_MODULE_LINKER_FLAGS_INIT="-fuse-ld=${{matrix.linker}}"
          -DCMAKE_SHARED_LINKER_FLAGS_INIT="-fuse-ld=${{matrix.linker}}"

      - name: Build CMake
        run: cmake --build ${{github.workspace}}/build --parallel --config ${{matrix.config}}
